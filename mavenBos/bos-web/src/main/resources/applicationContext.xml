<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 开启注解配置 -->
	<context:component-scan base-package="caotinging.*"></context:component-scan>
	<!-- 支持注解 -->
	<context:annotation-config/>
	<tx:annotation-driven/>
	
	<!-- 加载c3p0属性配置文件 -->
	<context:property-placeholder location="classpath:c3p0Conf.properties"/>
	
	<!-- 配置shiro -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 注入认证不通过（登录）页面/认证通过页面（登录首页）/没有权限访问页面 -->		
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/index.jsp" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		
		<!-- 注入url拦截策略 -->
		<property name="filterChainDefinitions">
			<!-- /**表示任意子目录以及子孙目录 /*仅仅指子目录不包括子目录下的目录 -->
			<value>
				/css/** = anon
				/images/** = anon
				/js/** = anon
				/login.jsp* = anon
				/validatecode.jsp* = anon
				/userAction_login = anon
				/page_base_staff.* = perms["staff-list"]
				/* = authc
			</value>
		</property>
	</bean>
	
	<!-- 配置shiro的安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 配置安全管理器需要的Realm -->
		<property name="realm" ref="realm" />
	</bean>
	
	<!-- 配置realm -->
	<bean id="realm" class="caotinging.realm.MyRealm" />
	
	<!-- 配置连接池 -->
	<!-- user是liunx的关键字，所以要加前缀jdbc. -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 配置LocalSessionFactoryBean，spring提供的用于整合hibernate的工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 在这里直接进行hibernate的相关配置，不进行单独文件配置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		
		<!-- 引入orm元数据：hibernateMapping数据 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:caotinging/domain/*.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 注册customerservice服务 -->
	<jaxws:client id="customerServiceProxy"
		address="http://localhost:8080/crm-customer/service/customer"
		serviceClass="caotinging.utils.crm.ICustomerService" />
	
</beans>